#!/usr/bin/perl

#
# NethServer Samba
#
# Copyright (C) 2012 Nethesis srl
#
# Initialize builtin accounts in SAM database. Requires winbindd running.
#
#

use strict;

use esmith::AccountsDB;
use User::pwent;

my $exitCode = 0;

my $luseradd = '/usr/sbin/luseradd';
my $lgroupmod = '/usr/sbin/lgroupmod';
my $net = '/usr/bin/net';
my $accountsDb = esmith::AccountsDB->open() or die("Could not open AccountsDB");

my $entries = {
    domadmins => {
	rid => 512,
	type => 'd',
	name => 'Domain Admins'
    },
    domusers => {
	rid => 513,
	type => 'd',
	name => 'Domain Users'
    },
    domguests => {
	rid => 514,
	type => 'd',
	name => 'Domain Guests'
    }	
};

sub initializeGroupRecord
{
    my $groupName = shift;
    my $description = shift;

    # note that $group is a user account passwd entry:
    my $pwent = getpwnam($groupName);

    if( ! $pwent) {
	warn "Could not find system group $groupName";
	return 0;  # failure;
    }

    my $groupRecord = $accountsDb->get($groupName);

    # Nothing to to if the record does not exists, or is already initialized.
    if( ! $groupRecord || $groupRecord->prop('Uid') || $groupRecord->prop('Gid')) {
	return 1; # success -- nothing to do.
    }

    # This is a strict check:
    if( $groupRecord->prop('type') ne 'group') {
	warn "The `$groupName` account is not of type group";
	return 0; # error
    }
    
    # Initialize the group record:
    $groupRecord->merge_props(
	'Gid' => $pwent->gid, 
	'Uid' => $pwent->uid, 
	'Description' => $description,
	'Removable' => 'no'
	);

    return 1; # success
}

while ( my ($group, $entry) = each(%$entries) ) {
    
    if(getgrnam($group)) {
	# warn "Ignoring existing group `$group`..\n";
	next;
    }

    # Create a system user and private group entry:
    qx($luseradd -s /bin/false -r $group);
    if($? != 0) {
	warn "Failed to create system samba group `$group`";
	$exitCode ++;
	next;
    }

    if( ! initializeGroupRecord($group, $entry->{'name'})) {
	$exitCode ++;
    }

    # Map the created unix group to the given $entry
    system($net, 'groupmap', 'add', 
	   "ntgroup=" . $entry->{'name'}, 
	   "unixgroup=" . $group, 
	   "rid=" . $entry->{'rid'}
	);

    if($? != 0) {
	warn "Failed to map unix group `$group` to samba rid " . $entry->{'rid'};
	$exitCode ++;
	next;
    }
}



exit($exitCode == 0 ? 0 : 1);
