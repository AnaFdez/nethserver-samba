#!/usr/bin/perl

#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;

use NethServer::Directory;
use NethServer::Service;

#
# Refs #1137. Skip acl setup, if samba is not enabled
#
if( ! NethServer::Service::is_enabled('smb')) {
    warn "smb service is currently not enabled, skipping ldap ACL setup.\n";
    exit 0;
}


my $ldap = NethServer::Directory::connect();
my $internalSuffix = NethServer::Directory::getInternalSuffix();
my $exitCode = 0;

#use Data::Dumper;

#
# Modify Bdb ACL to grant write permission to samba 
#
my $accessSearch = $ldap->search(
    base => "cn=config",
    filter => "(&(olcSuffix=$internalSuffix)(objectClass=olcBdbConfig))",
    sizelimit => 1,
    scope => 'one'
    );

if($accessSearch->is_error()) {	
    warn "Cannot find `$internalSuffix` subtree";
    exit 1;
}

my $aclEntry = $accessSearch->pop_entry();

if($aclEntry) {
    my $sambaWho = qq( by dn.exact="cn=samba,$internalSuffix" peername.ip="127.0.0.1" write );
    my @olcAccess = $aclEntry->get_value('olcAccess');
    
    foreach(@olcAccess) {
	s/ manage/ manage $sambaWho/ if (m/to \*/s && ! m/\Q$sambaWho\E/);
    }
    
    # print Dumper([@olcAccess]);	    
    my $message = $ldap->modify(
	$aclEntry->dn(),
	replace => [
	    olcAccess => [@olcAccess]
	]);
    
    if($message->is_error()) {    	
	warn 'modify';
	exit 1;
    }
} 

exit 0;
